# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Identify the built .jar file
      id: jar
      run: |
        # Assuming the generated jar file is in the target directory
        pwd
        ls target/*.jar | head -n 1
        echo "::set-output name=jar_file::$(ls target/*.jar | head -n 1)"

    - name: Verify JAR file
      run: |
        ls -l ${{ steps.jar.outputs.jar_file }}
        file ${{ steps.jar.outputs.jar_file }}

    # - name: Build and push Docker images
    #   uses: docker/build-push-action@v6.13.0
    #   with:
    #     # List of build-time variables
    #     build-args: JAR_FILE="${{ steps.jar.outputs.jar_file }}"
    #     # Path to the Dockerfile
    #     file: Dockerfile
    #     # List of tags
    #     tags: jfrancis/my-spring-boot-app:latest
    

    - name: Build Docker image
      run: |
        cd ${{ github.workspace }}
        # docker build -t my-spring-boot-app -f Dockerfile . --build-arg JAR_FILE="${{ steps.jar.outputs.jar_file }}" --progress=plain
        docker build -t my-spring-boot-app -f Dockerfile .
        docker tag my-spring-boot-app jfrancis/my-spring-boot-app:latest
        docker history jfrancis/my-spring-boot-app:latest

    - name: Push Docker image to DockerHub
      run: | 
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push jfrancis/my-spring-boot-app:latest

    # # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
